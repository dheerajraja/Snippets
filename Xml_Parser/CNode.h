/* Generated by Together */

#ifndef CNODE_H
#define CNODE_H
#include <iostream>		// Header für die Standard-IO-Objekte (z.B. cout, cin)#include <stdlib.h> //#include <string> // for string datatype,using namespace std;

/**
 * Enumeration data that indicates that node can be an ELEMENT & TEXT type
 */
enum node_t
{
	ELEMENT, TEXT
};

/**
 * Class that represents a node (element or text) in the XML format
 */

class CNode
{
public:

	/**
	 * Parameterized constructor
	 * @param:node_t nodeType : Initializes the node type to element or text type
	 * depending on the child class object being created
	 * @return: None
	 */
	CNode(node_t nodeType = ELEMENT);

	/**
	 * This method is used to obtain the node type of the child class created in
	 * the data structure
	 * @param:None
	 * @return: None
	 */
	node_t getNodeType();

private:
	/**
	 * The parameter that holds the enum node type element or text     */
	node_t m_nodeType;
};
#endif //CNODE_H
